[testenv:bootstrap]
deps =
    jinja2
    tox
skip_install = true
commands =
    python ci/bootstrap.py --no-env
passenv =
    *

; a generative tox configuration, see: https://tox.wiki/en/latest/user_guide.html#generative-environments
[tox]
envlist =
    clean,
    check,
    docs,
    {py38,py39,py310,py311,py312,pypy38,pypy39,pypy310}-pytest{81}-xdist{350}-coverage{75,76},
    report
ignore_basepython_conflict = true

[testenv]
basepython =
    pypy38: {env:TOXPYTHON:pypy3.8}
    pypy39: {env:TOXPYTHON:pypy3.9}
    pypy310: {env:TOXPYTHON:pypy3.10}
    py38: {env:TOXPYTHON:python3.8}
    py39: {env:TOXPYTHON:python3.9}
    py310: {env:TOXPYTHON:python3.10}
    py311: {env:TOXPYTHON:python3.11}
    py312: {env:TOXPYTHON:python3.12}
    {bootstrap,clean,check,report,docs}: {env:TOXPYTHON:python3}
extras = testing
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes

    # Use env vars for (optional) pinning of deps.
    pytest46:  _DEP_PYTEST=pytest==4.6.10
    pytest53:  _DEP_PYTEST=pytest==5.3.2
    pytest54:  _DEP_PYTEST=pytest==5.4.3
    pytest60:  _DEP_PYTEST=pytest==6.0.2
    pytest61:  _DEP_PYTEST=pytest==6.1.2
    pytest62:  _DEP_PYTEST=pytest==6.2.5
    pytest70:  _DEP_PYTEST=pytest==7.0.1
    pytest71:  _DEP_PYTEST=pytest==7.1.2
    pytest72:  _DEP_PYTEST=pytest==7.2.0
    pytest73:  _DEP_PYTEST=pytest==7.3.3
    pytest74:  _DEP_PYTEST=pytest==7.4.4
    pytest80:  _DEP_PYTEST=pytest==8.0.2
    pytest81:  _DEP_PYTEST=pytest==8.1.1

    xdist127: _DEP_PYTESTXDIST=pytest-xdist==1.27.0
    xdist129: _DEP_PYTESTXDIST=pytest-xdist==1.29.0
    xdist131: _DEP_PYTESTXDIST=pytest-xdist==1.31.0
    xdist132: _DEP_PYTESTXDIST=pytest-xdist==1.32.0
    xdist133: _DEP_PYTESTXDIST=pytest-xdist==1.33.0
    xdist134: _DEP_PYTESTXDIST=pytest-xdist==1.34.0
    xdist200: _DEP_PYTESTXDIST=pytest-xdist==2.0.0
    xdist201: _DEP_PYTESTXDIST=pytest-xdist==2.1.0
    xdist202: _DEP_PYTESTXDIST=pytest-xdist==2.2.0
    xdist250: _DEP_PYTESTXDIST=pytest-xdist==2.5.0
    xdist320: _DEP_PYTESTXDIST=pytest-xdist==3.2.0
    xdist330: _DEP_PYTESTXDIST=pytest-xdist==3.3.1
    xdist340: _DEP_PYTESTXDIST=pytest-xdist==3.4.0
    xdist350: _DEP_PYTESTXDIST=pytest-xdist==3.5.0
    xdistdev: _DEP_PYTESTXDIST=git+https://github.com/pytest-dev/pytest-xdist.git#egg=pytest-xdist

    coverage45: _DEP_COVERAGE=coverage==4.5.4
    coverage50: _DEP_COVERAGE=coverage==5.0.4
    coverage51: _DEP_COVERAGE=coverage==5.1
    coverage52: _DEP_COVERAGE=coverage==5.2.1
    coverage53: _DEP_COVERAGE=coverage==5.3.1
    coverage54: _DEP_COVERAGE=coverage==5.4
    coverage55: _DEP_COVERAGE=coverage==5.5
    coverage60: _DEP_COVERAGE=coverage==6.0.2
    coverage61: _DEP_COVERAGE=coverage==6.1.2
    coverage62: _DEP_COVERAGE=coverage==6.2
    coverage63: _DEP_COVERAGE=coverage==6.3.3
    coverage64: _DEP_COVERAGE=coverage==6.4.2
    coverage65: _DEP_COVERAGE=coverage==6.5.0
    coverage72: _DEP_COVERAGE=coverage==7.2.7
    coverage73: _DEP_COVERAGE=coverage==7.3.4
    coverage74: _DEP_COVERAGE=coverage==7.4.4
    coverage75: _DEP_COVERAGE=coverage==7.5.4
    coverage76: _DEP_COVERAGE=coverage==7.6.1
    # For testing against a coverage.py working tree.
    coveragedev: _DEP_COVERAGE=-e{env:COVERAGE_HOME}
passenv =
    *
deps =
    {env:_DEP_PYTEST:pytest}
    {env:_DEP_PYTESTXDIST:pytest-xdist}
    {env:_DEP_COVERAGE:coverage}
pip_pre = true
commands =
    {posargs:pytest -vv}

[testenv:check]
deps =
    docutils
    check-manifest
    pre-commit
    readme-renderer
    pygments
    isort
skip_install = true
commands =
    python setup.py check --strict --metadata --restructuredtext
    check-manifest .
    pre-commit run --all-files --show-diff-on-failure

[testenv:docs]
usedevelop = true
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build {posargs:-E} -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs

[testenv:report]
deps =
    coverage
skip_install = true
commands =
    coverage report
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
deps =
    coverage
