[testenv:bootstrap]
deps =
    jinja2
    matrix
    tox
skip_install = true
commands =
    python ci/bootstrap.py --no-env
passenv =
    *
; a generative tox configuration, see: https://tox.readthedocs.io/en/latest/config.html#generative-envlist

[tox]
envlist =
    check
    py{27,35,36,37,py,py3}-pytest46-xdist127-coverage{55}
    py{36,37,38,py3}-pytest{46,54}-xdist133-coverage{55}
    py{36,37,38,39,py3}-pytest{62}-xdist202-coverage{55}
    docs

[testenv]
extras = testing
setenv =
    PYTHONUNBUFFERED=yes

    # Use env vars for (optional) pinning of deps.
    pytest46:  _DEP_PYTEST=pytest==4.6.10
    pytest53:  _DEP_PYTEST=pytest==5.3.2
    pytest54:  _DEP_PYTEST=pytest==5.4.3
    pytest60:  _DEP_PYTEST=pytest==6.0.2
    pytest61:  _DEP_PYTEST=pytest==6.1.2
    pytest62:  _DEP_PYTEST=pytest==6.2.2

    xdist127: _DEP_PYTESTXDIST=pytest-xdist==1.27.0
    xdist129: _DEP_PYTESTXDIST=pytest-xdist==1.29.0
    xdist131: _DEP_PYTESTXDIST=pytest-xdist==1.31.0
    xdist132: _DEP_PYTESTXDIST=pytest-xdist==1.32.0
    xdist133: _DEP_PYTESTXDIST=pytest-xdist==1.33.0
    xdist134: _DEP_PYTESTXDIST=pytest-xdist==1.34.0
    xdist200: _DEP_PYTESTXDIST=pytest-xdist==2.0.0
    xdist201: _DEP_PYTESTXDIST=pytest-xdist==2.1.0
    xdist202: _DEP_PYTESTXDIST=pytest-xdist==2.2.0
    xdistdev: _DEP_PYTESTXDIST=git+https://github.com/pytest-dev/pytest-xdist.git#egg=pytest-xdist

    coverage45: _DEP_COVERAGE=coverage==4.5.4
    coverage50: _DEP_COVERAGE=coverage==5.0.4
    coverage51: _DEP_COVERAGE=coverage==5.1
    coverage52: _DEP_COVERAGE=coverage==5.2.1
    coverage53: _DEP_COVERAGE=coverage==5.3.1
    coverage54: _DEP_COVERAGE=coverage==5.4
    coverage55: _DEP_COVERAGE=coverage==5.5
    # For testing against a coverage.py working tree.
    coveragedev: _DEP_COVERAGE=-e{env:COVERAGE_HOME}
passenv =
    *
deps =
    {env:_DEP_PYTEST:pytest}
    {env:_DEP_PYTESTXDIST:pytest-xdist}
    {env:_DEP_COVERAGE:coverage}
pip_pre = true
commands =
    pytest {posargs:-vv}

[testenv:spell]
setenv =
    SPELLCHECK=1
commands =
    sphinx-build -b spelling docs dist/docs
skip_install = true
usedevelop = false
deps =
    -r{toxinidir}/docs/requirements.txt
    sphinxcontrib-spelling
    pyenchant

[testenv:docs]
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build {posargs:-E} -b html docs dist/docs

[testenv:check]
deps =
    docutils
    check-manifest
    flake8
    readme-renderer
    pygments
    isort
skip_install = true
usedevelop = false
commands =
    python setup.py check --strict --metadata --restructuredtext
    check-manifest {toxinidir}
    flake8 src tests setup.py
    isort --check-only --diff src tests setup.py
